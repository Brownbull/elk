input {
  file {
    path => "/home/brownbull/ELK/L/pipeInfra/data/10.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}
filter {
  csv {
    separator => ","
    autodetect_column_names => false
    autogenerate_column_names => false
    skip_header => true
    columns => ["server","date","hour","percFreeCPU","percFreeRAM","percFreeHDD",
      "totalSpaceGb","availableSpaceGb","conections","Other"]
  }
  if [server] == "Servidor" {
    drop { }
  }
  mutate {
    add_field => {
      "tsgc" => "%{date} %{hour}:00.000"
    }
    gsub => [
      # replace backslashes, question marks, hashes, and minuses
      # with a dot "."
      "percFreeCPU", "[%]", "",
      "percFreeRAM", "[%]", "",
      "percFreeHDD", "[%]", ""
    ]
    convert => {
      "percFreeCPU" => "integer"
      "percFreeRAM" => "integer"
      "percFreeHDD" => "integer"
      "totalSpaceGb" => "integer"
      "availableSpaceGb" => "float"
      "conections" => "integer"
    }
  }
  grok { 
    match => [
      "tsgc",
      "%{MONTHNUM:month}/%{MONTHDAY:day}/%{YEAR:year}%{SPACE}%{TIME:time}"
    ]
  }
  mutate {
    add_field => { "ts" => "%{year}-%{month}-%{day} %{time}" }
    gsub => [ "ts", " ", "T" ]
  }
  date {
    match => [ "ts", "ISO8601" ]
    timezone => "Asia/Novosibirsk"
  }
  mutate {
    remove_field => ["date","hour","Other", "tsgc", "time", "message", "day", "path", "year", "month"]
  }
}
output {
  mongodb{
    # uri => "mongodb://brownbull:928236543@cluster0-qjypl.gcp.mongodb.net/data"
    uri => "mongodb://brownbull:928236543@cluster0-shard-00-00-qjypl.gcp.mongodb.net:27017,cluster0-shard-00-01-qjypl.gcp.mongodb.net:27017,uster0-shard-00-02-qjypl.gcp.mongodb.net:27017/data"
    collection => "infra"
    database => "data"
    isodate => true
    generateId => false
  }
  stdout { codec => rubydebug }
  # stdout {}
}    
