{
	"info": {
		"_postman_id": "c52d24e3-9fa9-4a7c-93cd-b7c0fc431fb1",
		"name": "ELK",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Movies",
			"item": [
				{
					"name": "addBulk",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "/D:/Reference/ELK/data/movies/movies.json"
							}
						},
						"url": {
							"raw": "127.0.0.1:9200/_bulk?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"_bulk"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "mapCreate",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"mappings\": {\n\t\t\"properties\": {\n\t\t\t\"id\": {\n\t\t\t\t\"type\": \"integer\"\n\t\t\t},\n\t\t\t\"year\": {\n\t\t\t\t\"type\": \"date\",\n\t\t\t\t\"fields\": {\n\t\t\t\t\t\"txt\":{\n\t\t\t\t\t\t\"type\": \"text\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"genre\": {\n\t\t\t\t\"type\": \"keyword\"\n\t\t\t},\n\t\t\t\"title\": {\n\t\t\t\t\"type\": \"text\",\n\t\t\t\t\"analyzer\": \"english\",\n\t\t\t\t\"fields\": {\n\t\t\t\t\t\"raw\":{\n\t\t\t\t\t\t\"type\": \"keyword\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "dropDB",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "127.0.0.1:9200/movies",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "mapDef",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "127.0.0.1:9200/movies/_mapping",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_mapping"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAll",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "add",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"genre\":[\"IMAX\",\"Sci-Fi\"],\r\n\"title\":\"Interstellar\",\r\n\"year\":2014\r\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_doc/109487-d",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_doc",
								"109487-d"
							]
						}
					},
					"response": []
				},
				{
					"name": "updt",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"doc\":{\n\t\t\"title\": \"Interstellar\",\n\t\t\"genre\": [\"Fome\",\"Lenta\"]\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_doc/109487/_update",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_doc",
								"109487",
								"_update"
							]
						}
					},
					"response": []
				},
				{
					"name": "urlGet",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.1:9200/movies/_doc/109487?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_doc",
								"109487"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "del",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.1:9200/movies/_doc/58559",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_doc",
								"58559"
							]
						}
					},
					"response": []
				},
				{
					"name": "updtConcurrent",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"genres\": [\"IMAX2\", \"Sci-Fi\"],\n\t\"title\": \"Inter Stellar\",\n\t\"year\": 2019\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_doc/109487?if_seq_no=8&if_primary_term=1",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_doc",
								"109487"
							],
							"query": [
								{
									"key": "if_seq_no",
									"value": "8"
								},
								{
									"key": "if_primary_term",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updtPersistent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"doc\": {\n\t\t\"title\": \"Interstaller\"\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_doc/109487/_update?retry_on_conflict=5",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_doc",
								"109487",
								"_update"
							],
							"query": [
								{
									"key": "retry_on_conflict",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryPhrase",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": {\n\t\t\"match_phrase\": {\n\t\t\t\"genre\": \"Sci\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryWords",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": {\n\t\t\"match\": {\n\t\t\t\"title\": \"Star Trek\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryExact",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": {\n\t\t\"match\": {\n\t\t\t\"genre\": \"Sci-Fi\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryBoolMustFilter",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\":\n\t{\n\t\t\"bool\": {\n\t\t\t\"must\": {\n\t\t\t\t\"term\": {\n\t\t\t\t\t\"title\": \"trek\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"filter\": {\n\t\t\t\t\"range\": {\n\t\t\t\t\t\"year\": {\n\t\t\t\t\t\t\"gte\": 2010\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryProximity",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t \"query\" : {\n\t\t\"match_phrase\": {\n\t\t\t\"title\": {\n\t\t\t\t\"query\": \"star beyond\",\n\t    \t\t\"slop\": 100\n\t    \t}\n\t    }\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						},
						"description": "match_phrase is a query, so results are sorted by relevance.\r\nYou can use a high slop, and will get docs with the words closer together scored higher."
					},
					"response": []
				},
				{
					"name": "qryMatchAndFilter",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\":\n\t{\n\t\t\"bool\": {\n\t\t\t\"must\": {\n\t\t\t\t\"match_phrase\": {\n\t\t\t\t\t\"title\": {\n\t\t\t\t\t\t\"query\": \"star wars\",\n\t    \t\t\t\t\"slop\": 1\n\t    \t\t\t}\n\t\t\t\t }\n\t\t\t},\n\t\t\t\"filter\": {\n\t\t\t\t\"range\": {\n\t\t\t\t\t\"year\": {\n\t\t\t\t\t\t\"gte\": 1980\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryPagination",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"from\": 2,\n\t\"size\": 2,\n\t\"query\": {\n\t\t\"match\": {\n\t\t\t\"genre\": \"Sci-Fi\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qrySort",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"sort\": \"title.raw\"\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryComplxSort",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\":\n\t{\n\t\t\"bool\": {\n\t\t\t\"must\": {\n\t\t\t\t\"match\": {\n\t\t\t\t\t\"genre\": \"Sci-Fi\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"filter\": {\n\t\t\t\t\"range\": {\n\t\t\t\t\t\"year\": {\n\t\t\t\t\t\t\"lt\": 1960\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"sort\": \"title.raw\"\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryFuzzySpecific",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": {\n\t\t\"fuzzy\": {\n\t\t\t\"title\": {\n\t\t\t\t\"value\": \"intrsteller\", \"fuzziness\": 2\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						},
						"description": "A way to account for typos and misspellings.\r\nThe levenshtein edit distance accounts for:\r\n- substitutions: interstellar -> intersteller\r\n- insertions: interstellar -> instersstellar\r\n- deletion: interstellar -> interstelar"
					},
					"response": []
				},
				{
					"name": "qryFuzzyAuto",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": {\n\t\t\"fuzzy\": {\n\t\t\t\"title\": {\n\t\t\t\t\"value\": \"intersteller\"\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						},
						"description": "### AUTO fuzzines\r\n- 0 for 1-2 character strings\r\n- 1 for 3-5 character strings\r\n- 2 for anything else"
					},
					"response": []
				},
				{
					"name": "qryWildcard",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\":{\n\t\t\"wildcard\":{\n\t\t\t\"year.txt\": \"1*\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						},
						"description": "year is date and can not be used on partial search. Mapping was remade adding txt field to year as text type field."
					},
					"response": []
				},
				{
					"name": "qryPrefix",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"query\":{\r\n\t\t\"prefix\":{\r\n\t\t\t\"year.txt\": \"201\"\r\n\t\t}\r\n\t}\r\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						},
						"description": "year is date and can not be used on partial search. Mapping was remade adding txt field to year as text type field."
					},
					"response": []
				},
				{
					"name": "addAnalyzer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"settings\":  {\n\t\t\"analysis\": {\n\t\t\t\"filter\": {\n\t\t\t\t\"autocomplete_filter\": {\n\t\t\t\t\t\"type\": \"edge_ngram\",\n\t\t\t\t\t\"min_gram\": 1,\n\t\t\t\t\t\"max_gram\": 20\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"analyzer\": {\n\t\t\t\t\"autocomplete\": {\n\t\t\t\t\t\"type\": \"custom\",\n\t\t\t\t\t\"tokenizer\": \"standard\",\n\t\t\t\t\t\"filter\": [\n\t\t\t\t\t\t\"lowercase\",\n\t\t\t\t\t\t\"autocomplete_filter\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								""
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "analayzerStruct",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"analyzer\": \"autocomplete\",\n\t\"text\": \"Sta\"\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_analyze?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_analyze"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "mapUpdt",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"properties\": {\n\t\t\"title\": {\n\t\t\t\"type\": \"text\",\n\t\t\t\"analyzer\": \"autocomplete\"\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_mapping?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_mapping"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryAutoComplete",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\": {\n\t\t\"match\": {\n\t\t\t\"title\": {\n\t\t\t\t\"query\": \"star tr\",\n\t\t\t\t\"analyzer\": \"standard\"\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addBulk2",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "/D:/Reference/ELK/scripts/movies2.json"
							}
						},
						"url": {
							"raw": "127.0.0.1:9200/_bulk",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"_bulk"
							]
						}
					},
					"response": []
				},
				{
					"name": "urlQrySimple",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.1:9200/movies/_search?q=mary%20poppins&pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"movies",
								"_search"
							],
							"query": [
								{
									"key": "q",
									"value": "mary%20poppins"
								},
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Series",
			"item": [
				{
					"name": "mapCreate",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"mappings\": {\n\t\t\"properties\": {\n\t\t\t\"film_to_franchise\": {\n\t\t\t\t\"type\": \"join\",\n\t\t\t\t\"relations\": {\n\t\t\t\t\t\"franchise\": \"film\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/series?",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"series"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "addBulk",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "/D:/Reference/ELK/data/series/series.json"
							}
						},
						"url": {
							"raw": "127.0.0.1:9200/_bulk?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"_bulk"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryParent",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\":{\n\t\t\"has_parent\": {\n\t\t\t\"parent_type\": \"franchise\",\n\t\t\t\"query\": {\n\t\t\t\t\"match\": {\n\t\t\t\t\t\"title\": \"Star Wars\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/series/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"series",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "qryChild",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"query\":{\n\t\t\"has_child\": {\n\t\t\t\"type\": \"film\",\n\t\t\t\"query\": {\n\t\t\t\t\"match\": {\n\t\t\t\t\t\"title\": \"Awakens\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "127.0.0.1:9200/series/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"series",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Ratings",
			"item": [
				{
					"name": "getAll",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.1:9200/ratings/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"ratings",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "getAll",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.1:9200/tags/_search?pretty",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "9200",
							"path": [
								"tags",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}